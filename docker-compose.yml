services:
  backend:
    build: ./backend
    volumes:
      - ./backend:/app
    environment:
      - DJANGO_SETTINGS_MODULE=tombola.settings
      - REDIS_HOST=redis
      - DB_NAME=tombola
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - PYTHONUNBUFFERED=1
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - db
      - backend:
        condition: service_healthy
    networks:
      - tombola-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend:
        condition: service_healthy
    networks:
      - tombola-network
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - tombola-network
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=tombola
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - tombola-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  tombola-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: 